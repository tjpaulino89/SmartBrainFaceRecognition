{"ast":null,"code":"var _jsxFileName = \"/Users/thomaspaulino/Desktop/ztm/projects/SmartBrain/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport Navigation from './components/Navigation/Navigation';\nimport Logo from './components/Logo/Logo';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport Rank from './components/Rank/Rank';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\nimport ParticlesBg from 'particles-bg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass App extends Component {\n  constructor() {\n    super();\n    this.onInputChange = event => {\n      this.setState({\n        input: event.target.value\n      });\n    };\n    this.onButtonSubmit = () => {\n      this.setState({\n        imageUrl: this.state.input\n      });\n      ///////////////////////////////////////////////////////////////////////////////////////////////////\n      // In this section, we set the user authentication, user and app ID, model details, and the URL\n      // of the image we want as an input. Change these strings to run your own example.\n      //////////////////////////////////////////////////////////////////////////////////////////////////\n\n      // Your PAT (Personal Access Token) can be found in the portal under Authentification\n      // const PAT = 'ffe67f6f20cd4de5aef921dfd72cc5fa';\n      // // Specify the correct user_id/app_id pairings\n      // // Since you're making inferences outside your app's scope\n      // const USER_ID = 'tjpaulino89';       \n      // const APP_ID = 'Face-Detection';\n      // // Change these to whatever model and image URL you want to use\n      // const MODEL_ID = 'face-detection';\n      // const MODEL_VERSION_ID = '6dc7e46bc9124c5c8824be4822abe105';    \n      // const IMAGE_URL = this.state.input;\n      // // 'https://samples.clarifai.com/metro-north.jpg';\n\n      // ///////////////////////////////////////////////////////////////////////////////////\n      // // YOU DO NOT NEED TO CHANGE ANYTHING BELOW THIS LINE TO RUN THIS EXAMPLE\n      // ///////////////////////////////////////////////////////////////////////////////////\n\n      // const raw = JSON.stringify({\n      //     \"user_app_id\": {\n      //         \"user_id\": USER_ID,\n      //         \"app_id\": APP_ID\n      //     },\n      //     \"inputs\": [\n      //         {\n      //             \"data\": {\n      //                 \"image\": {\n      //                     \"url\": IMAGE_URL\n      //                 }\n      //             }\n      //         }\n      //     ]\n      // });\n\n      // const requestOptions = {\n      //     method: 'POST',\n      //     headers: {\n      //         'Accept': 'application/json',\n      //         'Authorization': 'Key ' + PAT\n      //     },\n      //     body: raw\n      // };\n\n      // // NOTE: MODEL_VERSION_ID is optional, you can also call prediction with the MODEL_ID only\n      // // https://api.clarifai.com/v2/models/{YOUR_MODEL_ID}/outputs\n      // // this will default to the latest version_id\n\n      // fetch(\"https://api.clarifai.com/v2/models/\" + MODEL_ID + \"/versions/\" + MODEL_VERSION_ID + \"/outputs\", requestOptions)\n      //     .then(response => response.json())\n      //     .then(result => console.log(result))\n      //     .catch(error => console.log('error', error));\n    };\n    this.state = {\n      input: '',\n      imageUrl: '',\n      // boundingBox: {\n      //   bottom_row: 0.7241363,\n      //   left_col: 0.25099722,\n      //   right_col: 0.6566857,\n      //   top_row: 0.2896744\n      // }\n      boundingBoxes: []\n    };\n  }\n  render() {\n    console.log(this.state.boundingBox);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(ParticlesBg, {\n        color: \"#d9ecff\",\n        num: 200,\n        type: \"cobweb\",\n        bg: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Navigation, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Logo, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Rank, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ImageLinkForm, {\n        onInputChange: this.onInputChange,\n        onButtonSubmit: this.onButtonSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FaceRecognition, {\n        imageUrl: this.state.imageUrl,\n        boundingBoxes: this.state.boundingBoxes\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default App;","map":{"version":3,"names":["React","Component","Navigation","Logo","ImageLinkForm","Rank","FaceRecognition","ParticlesBg","jsxDEV","_jsxDEV","App","constructor","onInputChange","event","setState","input","target","value","onButtonSubmit","imageUrl","state","boundingBoxes","render","console","log","boundingBox","className","children","color","num","type","bg","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["/Users/thomaspaulino/Desktop/ztm/projects/SmartBrain/src/App.js"],"sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport Navigation from './components/Navigation/Navigation';\nimport Logo from './components/Logo/Logo';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport Rank from './components/Rank/Rank';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition'\nimport ParticlesBg from 'particles-bg'\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      input: '',\n      imageUrl: '',\n      // boundingBox: {\n      //   bottom_row: 0.7241363,\n      //   left_col: 0.25099722,\n      //   right_col: 0.6566857,\n      //   top_row: 0.2896744\n      // }\n      boundingBoxes: []\n    }\n  }\n\n  onInputChange = (event) => {\n    this.setState({ input: event.target.value })\n  }\n\n  onButtonSubmit = () => {\n    this.setState({ imageUrl: this.state.input });\n    ///////////////////////////////////////////////////////////////////////////////////////////////////\n    // In this section, we set the user authentication, user and app ID, model details, and the URL\n    // of the image we want as an input. Change these strings to run your own example.\n    //////////////////////////////////////////////////////////////////////////////////////////////////\n\n    // Your PAT (Personal Access Token) can be found in the portal under Authentification\n    // const PAT = 'ffe67f6f20cd4de5aef921dfd72cc5fa';\n    // // Specify the correct user_id/app_id pairings\n    // // Since you're making inferences outside your app's scope\n    // const USER_ID = 'tjpaulino89';       \n    // const APP_ID = 'Face-Detection';\n    // // Change these to whatever model and image URL you want to use\n    // const MODEL_ID = 'face-detection';\n    // const MODEL_VERSION_ID = '6dc7e46bc9124c5c8824be4822abe105';    \n    // const IMAGE_URL = this.state.input;\n    // // 'https://samples.clarifai.com/metro-north.jpg';\n\n    // ///////////////////////////////////////////////////////////////////////////////////\n    // // YOU DO NOT NEED TO CHANGE ANYTHING BELOW THIS LINE TO RUN THIS EXAMPLE\n    // ///////////////////////////////////////////////////////////////////////////////////\n\n    // const raw = JSON.stringify({\n    //     \"user_app_id\": {\n    //         \"user_id\": USER_ID,\n    //         \"app_id\": APP_ID\n    //     },\n    //     \"inputs\": [\n    //         {\n    //             \"data\": {\n    //                 \"image\": {\n    //                     \"url\": IMAGE_URL\n    //                 }\n    //             }\n    //         }\n    //     ]\n    // });\n\n    // const requestOptions = {\n    //     method: 'POST',\n    //     headers: {\n    //         'Accept': 'application/json',\n    //         'Authorization': 'Key ' + PAT\n    //     },\n    //     body: raw\n    // };\n\n    // // NOTE: MODEL_VERSION_ID is optional, you can also call prediction with the MODEL_ID only\n    // // https://api.clarifai.com/v2/models/{YOUR_MODEL_ID}/outputs\n    // // this will default to the latest version_id\n\n    // fetch(\"https://api.clarifai.com/v2/models/\" + MODEL_ID + \"/versions/\" + MODEL_VERSION_ID + \"/outputs\", requestOptions)\n    //     .then(response => response.json())\n    //     .then(result => console.log(result))\n    //     .catch(error => console.log('error', error));\n  }\n  \n  render() {\n    console.log(this.state.boundingBox)\n    return (\n      <div className=\"App\">\n        <ParticlesBg color=\"#d9ecff\" num={200} type=\"cobweb\" bg={true} />\n        <Navigation />\n        <Logo />\n        <Rank />\n        <ImageLinkForm onInputChange={this.onInputChange} onButtonSubmit={this.onButtonSubmit}/>\n        <FaceRecognition imageUrl={this.state.imageUrl} boundingBoxes={this.state.boundingBoxes}/>\n      </div>\n  );\n  }\n\n}\n\nexport default App;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAO,WAAW;AAClB,OAAOC,UAAU,MAAM,oCAAoC;AAC3D,OAAOC,IAAI,MAAM,wBAAwB;AACzC,OAAOC,aAAa,MAAM,0CAA0C;AACpE,OAAOC,IAAI,MAAM,wBAAwB;AACzC,OAAOC,eAAe,MAAM,8CAA8C;AAC1E,OAAOC,WAAW,MAAM,cAAc;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEtC,MAAMC,GAAG,SAAST,SAAS,CAAC;EAC1BU,WAAWA,CAAA,EAAG;IACZ,KAAK,EAAE;IAAC,KAcVC,aAAa,GAAIC,KAAK,IAAK;MACzB,IAAI,CAACC,QAAQ,CAAC;QAAEC,KAAK,EAAEF,KAAK,CAACG,MAAM,CAACC;MAAM,CAAC,CAAC;IAC9C,CAAC;IAAA,KAEDC,cAAc,GAAG,MAAM;MACrB,IAAI,CAACJ,QAAQ,CAAC;QAAEK,QAAQ,EAAE,IAAI,CAACC,KAAK,CAACL;MAAM,CAAC,CAAC;MAC7C;MACA;MACA;MACA;;MAEA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;;MAEA;MACA;MACA;;MAEA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;;MAEA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;;MAEA;MACA;MACA;;MAEA;MACA;MACA;MACA;IACF,CAAC;IAzEC,IAAI,CAACK,KAAK,GAAG;MACXL,KAAK,EAAE,EAAE;MACTI,QAAQ,EAAE,EAAE;MACZ;MACA;MACA;MACA;MACA;MACA;MACAE,aAAa,EAAE;IACjB,CAAC;EACH;EAgEAC,MAAMA,CAAA,EAAG;IACPC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACJ,KAAK,CAACK,WAAW,CAAC;IACnC,oBACEhB,OAAA;MAAKiB,SAAS,EAAC,KAAK;MAAAC,QAAA,gBAClBlB,OAAA,CAACF,WAAW;QAACqB,KAAK,EAAC,SAAS;QAACC,GAAG,EAAE,GAAI;QAACC,IAAI,EAAC,QAAQ;QAACC,EAAE,EAAE;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAG,eACjE1B,OAAA,CAACP,UAAU;QAAA8B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAG,eACd1B,OAAA,CAACN,IAAI;QAAA6B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAG,eACR1B,OAAA,CAACJ,IAAI;QAAA2B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAG,eACR1B,OAAA,CAACL,aAAa;QAACQ,aAAa,EAAE,IAAI,CAACA,aAAc;QAACM,cAAc,EAAE,IAAI,CAACA;MAAe;QAAAc,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAE,eACxF1B,OAAA,CAACH,eAAe;QAACa,QAAQ,EAAE,IAAI,CAACC,KAAK,CAACD,QAAS;QAACE,aAAa,EAAE,IAAI,CAACD,KAAK,CAACC;MAAc;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAE;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACtF;EAEV;AAEF;AAEA,eAAezB,GAAG"},"metadata":{},"sourceType":"module","externalDependencies":[]}